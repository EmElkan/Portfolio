{
	"info": {
		"_postman_id": "25f7ff11-4c51-45fd-b20a-992ea04d1e27",
		"name": "Restful Booker",
		"description": "## Overview\nThe Restful Booker API is a sample API based on hotel bookings. The API contains endpoints to demonstrate CRUD operations. The source code can be obtained from https://github.com/mwinteringham/restful-booker\n\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Bookings",
			"item": [
				{
					"name": "Get Auth Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 5s\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"var authSchema = {",
									"  \"properties\": {",
									"    \"token\": {",
									"        \"description\": \"The auth token returned\",",
									"        \"type\": \"string\",",
									"    }",
									"  }",
									"};",
									"",
									"var response = JSON.parse(responseBody);",
									"",
									"pm.test('Schema is valid', function() {",
									"  pm.expect(tv4.validate(response, authSchema)).to.be.true;",
									"});",
									"",
									"pm.collectionVariables.set(\"token\", response.token);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"admin\",\r\n    \"password\": \"{{password}}\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/auth/",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth",
								""
							]
						},
						"description": "Get auth token"
					},
					"response": []
				},
				{
					"name": "Get Bookings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 5s\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);\r",
									"});\r",
									"\r",
									"pm.test(\"Body contains bookingid\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"bookingid\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/booking",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking"
							]
						},
						"description": "Get a list of all bookings"
					},
					"response": []
				},
				{
					"name": "Get Booking by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 5s\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"Body contains firstname\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"firstname\");",
									"});",
									"",
									"pm.test(\"Body contains lastname\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"lastname\");",
									"});",
									"",
									"pm.test(\"Body contains totalprice\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"totalprice\");",
									"});",
									"",
									"pm.test(\"Body contains depositpaid\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"depositpaid\");",
									"});",
									"",
									"pm.test(\"Body contains bookingdates\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"bookingdates\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/booking/{{bookingID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking",
								"{{bookingID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Booking ID exists\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"bookingid\");",
									"});",
									"",
									"pm.test(\"Check firstname of new Booking\", function () {",
									"    pm.expect(jsonData.booking.firstname).to.eql(\"Sally\");",
									"});",
									"",
									"pm.test(\"Check lastname of new Booking\", function () {",
									"    pm.expect(jsonData.booking.lastname).to.eql(\"Brown\");",
									"});",
									"",
									"pm.test(\"Check-in date\", function () {",
									"    pm.expect(jsonData.booking.bookingdates.checkin).to.eql(\"2013-02-23\");",
									"});",
									"",
									"pm.test(\"Check out date\", function () {",
									"    pm.expect(jsonData.booking.bookingdates.checkout).to.eql(\"2014-10-23\");",
									"});",
									"",
									"pm.test(\"Check out date\", function () {",
									"    pm.expect(jsonData.booking.additionalneeds).to.eql(\"Breakfast\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"firstname\" : \"Sally\",\r\n  \"lastname\" : \"Brown\",\r\n  \"totalprice\" : 111,\r\n  \"depositpaid\" : true,\r\n  \"additionalneeds\" : \"Breakfast\",\r\n  \"bookingdates\" : {\r\n    \"checkin\" : \"2013-02-23\",\r\n    \"checkout\" : \"2014-10-23\"\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{url}}/booking",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const auth = {\r",
									"    url: pm.collectionVariables.get(\"url\") + \"/auth/\",\r",
									"    method: 'POST',\r",
									"    header: { 'content-type': 'application/json' },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({\r",
									"                \"username\": \"admin\",\r",
									"                \"password\": pm.collectionVariables.get(\"password\")\r",
									"        })\r",
									"\r",
									"    }\r",
									"};\r",
									"\r",
									"pm.sendRequest(auth, function (err, res) {\r",
									"    console.log(err ? err : res.json());\r",
									"    var responseJson = res.json();\r",
									"    pm.collectionVariables.set(\"token\", responseJson.token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Cookie",
								"value": "token={{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstname\" : \"James\",\n    \"lastname\" : \"Brown\",\n    \"totalprice\" : 111,\n    \"depositpaid\" : true,\n    \"bookingdates\" : {\n        \"checkin\" : \"2018-01-01\",\n        \"checkout\" : \"2019-01-01\"\n    },\n    \"additionalneeds\" : \"Breakfast\"\n}"
						},
						"url": {
							"raw": "{{url}}/booking/{{bookingID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking",
								"{{bookingID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Booking (partial)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const auth = {\r",
									"    url: pm.collectionVariables.get(\"url\") + \"/auth/\",\r",
									"    method: 'POST',\r",
									"    header: { 'content-type': 'application/json' },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({\r",
									"                \"username\": \"admin\",\r",
									"                \"password\": pm.collectionVariables.get(\"password\")\r",
									"        })\r",
									"\r",
									"    }\r",
									"};\r",
									"\r",
									"pm.sendRequest(auth, function (err, res) {\r",
									"    console.log(err ? err : res.json());\r",
									"    var responseJson = res.json();\r",
									"    pm.collectionVariables.set(\"token\", responseJson.token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Cookie",
								"value": "token={{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"James\",\r\n    \"lastname\" : \"Brown\"\r\n}"
						},
						"url": {
							"raw": "{{url}}/booking/{{bookingID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking",
								"{{bookingID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response code 200\", function() {",
									"     pm.expect(res.code).to.equal(200);",
									"});",
									"",
									"pm.test('Response should be booking deleted', function () {",
									"    pm.expect(res.status).to.include(\"Booking deleted\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const auth = {\r",
									"    url: pm.collectionVariables.get(\"url\") + \"/auth/\",\r",
									"    method: 'POST',\r",
									"    header: { 'content-type': 'application/json' },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify({\r",
									"                \"username\": \"admin\",\r",
									"                \"password\": pm.collectionVariables.get(\"password\")\r",
									"        })\r",
									"\r",
									"    }\r",
									"};\r",
									"\r",
									"pm.sendRequest(auth, function (err, res) {\r",
									"    console.log(err ? err : res.json());\r",
									"    var responseJson = res.json();\r",
									"    pm.collectionVariables.set(\"token\", responseJson.token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Cookie",
								"value": "token={{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/booking/{{bookingID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking",
								"{{bookingID}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "All bookings requests "
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "https://restful-booker.herokuapp.com"
		},
		{
			"key": "password",
			"value": "password123"
		},
		{
			"key": "bookingID",
			"value": "1"
		},
		{
			"key": "token",
			"value": ""
		}
	]
}